/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.admin;

import info5100.university.example.CourseSchedule.CourseOffer;
import info5100.university.example.Department.Department;
import javax.swing.table.DefaultTableModel;
import ui.MainJframe;

/**
 *
 * @author Yufeng
 */
public class ViewSchedule extends javax.swing.JPanel {

    /**
     * Creates new form ViewSchedule
     */
    Department department;
    MainJframe main;
    CourseSchedule courseSchedule;
    boolean initTable = true;
    public ViewSchedule(Department d, MainJframe m, CourseSchedule c) {
        initComponents();
        department = d;
        main = m;
        courseSchedule = c;
        populateSemester();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scheduletbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cmbSemester = new javax.swing.JComboBox<>();
        backBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("宋体", 0, 24)); // NOI18N
        jLabel1.setText("View Schedule");

        scheduletbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Number", "Course Name", "Credit", "Faculty", "Space"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(scheduletbl);
        if (scheduletbl.getColumnModel().getColumnCount() > 0) {
            scheduletbl.getColumnModel().getColumn(0).setResizable(false);
            scheduletbl.getColumnModel().getColumn(1).setResizable(false);
            scheduletbl.getColumnModel().getColumn(2).setResizable(false);
            scheduletbl.getColumnModel().getColumn(3).setResizable(false);
            scheduletbl.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel2.setText("Semester:");

        cmbSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSemester.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSemesterItemStateChanged(evt);
            }
        });
        cmbSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSemesterActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(204, 51, 0));
        backBtn.setText("back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(backBtn)
                        .addGap(154, 154, 154)
                        .addComponent(jLabel1)))
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateSemester(){
        cmbSemester.removeAllItems();
        cmbSemester.addItem("Spring");
        cmbSemester.addItem("Summer");
        cmbSemester.addItem("Fall");
    }
    
    public void initTable(){
        DefaultTableModel model = (DefaultTableModel) scheduletbl.getModel();
        model.setRowCount(0);
        for(CourseOffer co : department.getSpring().getSchedule()){
                Object row[] = new Object[5];
                row[0] = co.getCourse().getCOurseNumber();
                row[1] = co.getCourse().getName();
                row[2] = co.getCourse().getCredits();
                row[3] = co.getFacultyProfile().getPerson().getName();
                row[4] = co.getEmptySeatNumber() + " / " + co.getSeatlist().size();
                model.addRow(row);
            }
    }
    public void populateTable(){
        String semester = cmbSemester.getSelectedItem().toString();
        DefaultTableModel model = (DefaultTableModel) scheduletbl.getModel();
        model.setRowCount(0);
        
        if(semester.equals("Spring")){
            for(CourseOffer co : department.getSpring().getSchedule()){
                Object row[] = new Object[5];
                row[0] = co.getCourse().getCOurseNumber();
                row[1] = co.getCourse().getName();
                row[2] = co.getCourse().getCredits();
                row[3] = co.getFacultyProfile().getPerson().getName();
                row[4] = co.getEmptySeatNumber() + " / " + co.getSeatlist().size();
                model.addRow(row);
            }
        }else if(semester.equals("Summer")){
            for(CourseOffer co : department.getSummer().getSchedule()){
                Object row[] = new Object[5];
                row[0] = co.getCourse().getCOurseNumber();
                row[1] = co.getCourse().getName();
                row[2] = co.getCourse().getCredits();
                row[3] = co.getFacultyProfile().getPerson().getName();
                row[4] = co.getEmptySeatNumber() + " / " + co.getSeatlist().size();
                model.addRow(row);
            }
        }else if(semester.equals("Fall")){
            for(CourseOffer co : department.getFall().getSchedule()){
                Object row[] = new Object[5];
                row[0] = co.getCourse().getCOurseNumber();
                row[1] = co.getCourse().getName();
                row[2] = co.getCourse().getCredits();
                row[3] = co.getFacultyProfile().getPerson().getName();
                row[4] = co.getEmptySeatNumber() + " / " + co.getSeatlist().size();
                model.addRow(row);
            }
        }
    }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        main.getCardLayout().previous(main.getCards());
        main.getCards().remove(courseSchedule.view);
        courseSchedule.populateTable();
    }//GEN-LAST:event_backBtnActionPerformed

    private void cmbSemesterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSemesterItemStateChanged
        // TODO add your handling code here:
        if(initTable == true){
            initTable();
            initTable = false;
        }else{
            populateTable();
        }        
    }//GEN-LAST:event_cmbSemesterItemStateChanged

    private void cmbSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSemesterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox<String> cmbSemester;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable scheduletbl;
    // End of variables declaration//GEN-END:variables
}
